/*
 * Name: ViewController
 * Description: Code for storyboard interactions
 * Author/Date: Tucker J. Mogren/ 1/23/2019
 * References: https://medium.com/@ashikabala01/how-to-build-login-and-sign-up-functionality-for-your-ios-app-using-firebase-within-15-mins-df4731faf2f7
 */

import UIKit
import FirebaseUI




class ViewController: UIViewController {
    //Creates an instance of the Alerts class to allow for user alerts to be shown and displayed.
    
    let appAlerts = Alerts()
    
    //Class global vars for fields that gather data
    //First two are for LogIn
    @IBOutlet weak var e_MailTextFieldLogInOutlet: UITextField!
    @IBOutlet weak var passwordTextFieldLogInOutlet: UITextField!
    //Last three are for SignUp
    @IBOutlet weak var e_MailTextFieldSignUpOutlet: UITextField!
    @IBOutlet weak var password1xTextFieldSignUpOutlet: UITextField!
    @IBOutlet weak var password2xTextFieldSignUpOutlet: UITextField!
    

    /*
     * Function Name: viewDidLoad()
     * Called after the view controller is loaded into memory - Per apple documentation: https://developer.apple.com/documentation/uikit/uiviewcontroller/1621495-viewdidload
     * Tucker Mogren; 1/23/19
     */
    
    override func viewDidLoad()
    {
        super.viewDidLoad()

    }
    
    /*
     * Function Name: logInButtonAction()
     * Will send users information to Firebase for Authenication.
     * Tucker Mogren; 1/23/19
     * Referenced: https://firebase.google.com/docs/auth/ios/custom-auth
     */
    
    @IBAction func logInButtonAction(_ sender: Any)
    {
        let eMailTextEntryLogIn: String = e_MailTextFieldLogInOutlet.text!
        let passwordTextEntryLogIn: String = passwordTextFieldLogInOutlet.text!
        print("Email is: \(eMailTextEntryLogIn) and password is: \(passwordTextEntryLogIn).")
        
        
        Auth.auth().signIn(withEmail: eMailTextEntryLogIn, password: passwordTextEntryLogIn) { (user, error) in
            if (error == nil && user != nil)
            {
                
                self.performSegue(withIdentifier: "continuefromlogIn", sender: self)
                
            }else{
                print("/n/n/n/nERROR: Log-in failed \(error!.localizedDescription).")
                self.appAlerts.showAlertIncorrectLogin()
                //Add login count and forgot password option after 5 incorrect password attepmts;
            }
        }
    }
    
    /*
     * Function: createAccountButton()
     * Will sent data to firebase in order to create account
     * Tucker Mogren; 1/23/19
     */
    
    @IBAction func createAccountButtonAction(_ sender: Any)
    {
        let e_mailEntrySignUp: String = e_MailTextFieldSignUpOutlet.text!
        let password1XSignUp: String = password1xTextFieldSignUpOutlet.text!
        let password2XSignUp: String = password2xTextFieldSignUpOutlet.text!
        
        print("Email is: \(e_mailEntrySignUp), 1x Passowrd is: \(password1XSignUp), and 2x passowrd is: \(password2XSignUp). ")
        
        if (password1XSignUp == password2XSignUp)
        {
           
            
            
           //creates new user.
            Auth.auth().createUser(withEmail: e_mailEntrySignUp, password: password1XSignUp) { (authResult, error) in
                 //would allow to access information regarding user
                //guard let user = authResult?.user else {return}
                //Unique user ID that ties to Database.
                //user.uid
                
                //will move to login screen when account is created.
                self.performSegue(withIdentifier: "accountCreatedGoToLogIn", sender: self)
                
                
            }
            
        }else{
            appAlerts.showAlertPasswordDoesntMatch()
            
        }
        
        
        /*
         * TODO:
         * Check to see if passwords match, make sure passwords are at least 15 charaters long and contain a digit.
         * If everything checks out, send to firebase to create account, and then return them to the login screen to login for the first time
         * Else: Throw an error, asking them to try again.
        */
        
        
        
        
    }
    
    /*
     * Function: signInButtonHomeScreen()
     * Will move the user from the home screen to the sign in screen.
     * Tucker Mogren; 1/23/19
     */
    
    @IBAction func signInButtonHomeScreenAction(_ sender: Any)
    {
        performSegue(withIdentifier: "goToReg", sender: self)
    }
    
    /*
     * Function Name: logInbuttonhomeScreen()
     * Will gather and save the users entry to be passed in for authenication
     * Tucker Mogren; 1/23/19
     */
    
    @IBAction func logInButtonHomeScreenAction(_ sender: Any)
    {
        performSegue(withIdentifier: "goToLogin", sender: self)
    }
}
